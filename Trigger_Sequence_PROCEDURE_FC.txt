create or replace TRIGGER QTCHECK
BEFORE UPDATE OF QTESTOCK ON INVENTAIRE
for each row 
BEGIN 
  IF (:new.QTESTOCK < 0)
  THEN RAISE_APPLICATION_ERROR(-20324,'Vous ne pouvez pas avoir une valeur négative de stock');
  END IF;
END;

CREATE OR REPLACE
TRIGGER INCPRODUIT
BEFORE INSERT ON PRODUIT
FOR EACH ROW
BEGIN
IF :NEW.IDPRODUIT IS NULL THEN
SELECT SEQ_PRODUIT .NEXTVAL INTO :NEW.IDPRODUIT FROM DUAL;
END IF;
END;

create or replace TRIGGER INCINVENTAIRE
BEFORE INSERT ON INVENTAIRE
FOR EACH ROW
BEGIN
IF :NEW.IDINVENTAIRE IS NULL THEN
SELECT SEQ_INVENTAIRE.NEXTVAL INTO :NEW.IDINVENTAIRE FROM DUAL;
END IF;
END;




CREATE SEQUENCE  "ANALYSTE_OPE_FC"."SEQ_PRODUIT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
CREATE SEQUENCE  "ANALYSTE_OPE_FC"."SEQ_INVENTAIRE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

create or replace PROCEDURE INSERTION_PRODUIT(
PDesc IN PRODUIT.DESCPRODUIT%TYPE,
PPrix IN PRODUIT.PRIXPRODUIT%TYPE,
PQteStockProduit in PRODUIT.QTESTOCKPRODUIT% TYPE) AS
BEGIN 
INSERT INTO Produit(descproduit, prixproduit, qtestockproduit) VALUES (pdesc, pprix, pqtestockproduit);
END;

create or replace PROCEDURE MODIFICATION_PRODUIT(PIDPRODUIT IN PRODUIT.IDPRODUIT%TYPE,
                          PDESC IN PRODUIT.DESCPRODUIT%TYPE,
                          PPRIX IN PRODUIT.PRIXPRODUIT%TYPE,
                          PQTE IN PRODUIT.QTESTOCKPRODUIT% TYPE ) AS
  BEGIN
    UPDATE PRODUIT SET descproduit = PDESC , prixproduit = pprix, qtestockproduit = pqte WHERE idproduit = pidproduit;
    --NULL;
  END MODIFICATION_PRODUIT;

create or replace PROCEDURE SUPPRIMER_PRODUIT(PID IN PRODUIT.IDPRODUIT%TYPE) AS
  BEGIN
    DELETE FROM PRODUIT WHERE idproduit = pid;
    --NULL;
  END SUPPRIMER_PRODUIT;
 
